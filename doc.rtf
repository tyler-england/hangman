{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red153\green168\blue186;\red32\green32\blue32;\red149\green184\blue79;
\red191\green100\blue38;\red117\green114\blue185;\red109\green109\blue109;\red86\green132\blue173;}
{\*\expandedcolortbl;;\csgenericrgb\c60000\c65882\c72941;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c58431\c72157\c30980;
\csgenericrgb\c74902\c39216\c14902;\csgenericrgb\c45882\c44706\c72549;\csgenericrgb\c42745\c42745\c42745;\csgenericrgb\c33725\c51765\c67843;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 fullfilepath=\cf4 "/Users/Tyler/Desktop/words_test.txt"\
\cf5 import \cf2 random \cf5 as \cf2 rand\
\
\cf5 with \cf6 open\cf2 (fullfilepath) \cf5 as \cf2 textfile: \cf7 #list of all possible words\
    \cf2 wordslist=[line.rstrip() \cf5 for \cf2 line \cf5 in \cf2 textfile]\
\
mistakeset=[\cf4 ""\cf5 ,\cf4 ""\cf2 head\cf4 ","\cf2 body\cf4 ","\cf2 left arm\cf4 ","\cf2 right arm\cf4 ","\cf2 left leg\cf4 ","\cf2 right leg\cf4 "]\
\
\cf2 affirmations=[\cf4 "Yes"\cf5 ,\cf4 "Y"\cf2 ]\
resp=\cf6 input\cf2 (\cf4 "Do you want to have a word generated for you to guess? (y/n) "\cf2 )\
\
\cf5 if \cf6 any\cf2 (x==resp.strip().upper() \cf5 for \cf2 x \cf5 in \cf2 affirmations):\
    i=rand.randrange(\cf6 len\cf2 (wordslist))\
    word=wordslist[i]\
\
    numlets=\cf6 len\cf2 (word)\
    \cf5 for \cf2 i \cf5 in \cf6 range\cf2 (numlets):\
        \cf7 #spelling[i]= ??? each index is an individual letter of 'word'\
\
\cf5 else\cf2 : \cf7 #help user guess a word\
\
    \cf2 numlets=\cf8 0\
\
    \cf5 while \cf2 numlets==\cf8 0\cf2 : \cf7 #get number of letters in the word\
        \cf5 try\cf2 :\
            numlets=\cf6 int\cf2 (\cf6 input\cf2 (\cf4 "How many letters are in the word? "\cf2 ))\
        \cf5 except \cf6 NameError\cf2 :\
            numlets=\cf8 0\
            \cf5 print\cf2 (\cf4 "You must enter an integer."\cf2 )\
\
    i=\cf8 0 \cf7 #reduce list to words with correct num of letters\
    \cf5 while \cf2 i <= (\cf6 len\cf2 (wordslist)-\cf8 1\cf2 ):\
        \cf5 if \cf6 len\cf2 (wordslist[i])!=numlets:\
            \cf5 del \cf2 wordslist[i]\
        \cf5 else\cf2 :\
            i=i+\cf8 1\
\
    \cf5 if \cf6 len\cf2 (wordslist)==\cf8 0\cf2 :\
        \cf5 print\cf2 (\cf4 "Error."\cf2 )\
    \cf5 elif \cf6 len\cf2 (wordslist)==\cf8 1\cf2 :\
        \cf5 print\cf2 (\cf4 "The word is: " \cf2 + wordslist[\cf8 0\cf2 ])\
        \cf6 quit\cf2 ()\
\
    nummistakes =\cf8 0\
    \cf2 singleword=\cf6 False\
    \cf2 letsguessed=[]\
    spelling=[numlets] \cf7 #array with 1 element? needs to be array with 'numlets' elements\
    \cf5 while \cf2 nummistakes < \cf8 6 \cf5 and \cf2 singleword==\cf6 False\cf2 : \cf7 #6 mistakes means you lost\
        \cf2 newlet=\cf6 input\cf2 (\cf4 "Letter to guess? "\cf2 )\
        \cf5 if \cf6 any\cf2 (x==newlet \cf5 for \cf2 x \cf5 in \cf2 letsguessed):\
            \cf5 print\cf2 (\cf4 "That letter has already been guessed."\cf2 )\
        \cf5 else\cf2 :\
            letsguessed.append(newlet)\
            inword=\cf6 input\cf2 (\cf4 "Is " \cf2 + newlet + \cf4 " in the word? (y/n) "\cf2 )\
            \cf5 if \cf2 inword.strip().upper() \cf5 in \cf2 affirmations: \cf7 #letter is in the word at least once\
                \cf2 numinst=-\cf8 1 \cf7 #allow user to enter 0 if they mistakenly chose "y"\
                \cf5 while \cf2 numinst == -\cf8 1\cf2 :  \cf7 # get number of times it appears\
                    \cf5 try\cf2 :\
                        numinst=\cf6 int\cf2 (\cf6 input\cf2 (\cf4 "How many times is " \cf2 + newlet + \cf4 " in the word? "\cf2 ))\
                    \cf5 except \cf6 NameError\cf2 :\
                        numinst = -\cf8 1\
                        \cf5 print\cf2 (\cf4 "You must enter an integer."\cf2 )\
                \cf5 if \cf2 numinst>\cf8 0\cf2 :\
                    letpos=[]\
                    \cf5 if \cf2 numinst==\cf8 1\cf2 :\
                        letpos[\cf8 0\cf2 ]=\cf6 input\cf2 (\cf4 "How many letters from the beginning of the word (starting with 1) is the " \cf2 +\
                                        newlet + \cf4 "?"\cf2 )\
                    \cf5 else\cf2 :\
                        \cf5 for \cf2 x \cf5 in \cf6 range \cf2 (numinst-\cf8 1\cf2 ):\
                        letpos[x]=\cf6 input\cf2 (\cf4 "How many letters from the beginning of the word (starting with 1) is " \cf2 +\
                                        newlet + \cf4 " #" \cf2 + x+\cf8 1 \cf2 +\cf4 "?"\cf2 )\
\
                    \cf5 for \cf2 x \cf5 in \cf2 letpos: \cf7 #update spelling\
                        \cf2 spelling[x-\cf8 1\cf2 ]=newlet\
\
                    i = \cf8 0 \cf7 #reduce wordslist\
                    \cf5 while \cf2 i <= (\cf6 len\cf2 (wordslist) - \cf8 1\cf2 ):\
                        \cf5 for \cf2 j \cf5 in \cf6 range\cf2 (\cf6 len\cf2 (spelling)-\cf8 1\cf2 ):\
                            \cf5 if \cf7 #character in word @ position poslist != spelling[poslist]:\
                                #delword=True\
\
                        \cf5 if \cf2 delword:\
                            \cf5 del \cf2 wordslist[i]\
                        \cf5 else\cf2 :\
                            i = i + \cf8 1\
\
\
                \cf5 else\cf2 :\
                    letsguessed.remove(newlet)\
                    \cf5 print\cf2 (\cf4 "You indicated that the letter " \cf2 + newlet + \cf4 "was in the word, with a quantity of 0. Please "\
                                                                      "retry entering " \cf2 + newlet + \cf4 " as a new guess."\cf2 )\
            \cf5 else\cf2 : \cf7 #letter was a bad guess\
                \cf2 nummistakes=nummistakes+\cf8 1\
                \cf5 print\cf2 (\cf4 "Incorrect guess #" \cf2 + nummistakes + \cf4 ": a " \cf2 + mistakeset[nummistakes] + \cf4 "is drawn."\cf2 )\
\
    \cf5 if \cf2 singleword==\cf6 True\cf2 : \cf7 #word was found\
        \cf5 print\cf2 (\cf4 "The word is: " \cf2 + wordslist[\cf8 0\cf2 ])\
    \cf5 else\cf2 : \cf7 #game was lost\
        \cf5 print\cf2 (\cf4 "Too many mistakes. Hangman was fully drawn."\cf2 )\
}